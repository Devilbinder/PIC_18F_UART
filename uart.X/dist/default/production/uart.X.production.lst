

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Oct 07 02:40:38 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           ; Version 1.41
    22                           ; Generated 25/01/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  00022E                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _data
    61  00022E  41                 	db	65
    62  0000                     _PIR1bits	set	3998
    63  0000                     _INTCONbits	set	4082
    64  0000                     _RCONbits	set	4048
    65  0000                     _OSCCONbits	set	4051
    66  0000                     _RCREG	set	4014
    67  0000                     _TXREG	set	4013
    68  0000                     _PIE1bits	set	3997
    69  0000                     _IPR1bits	set	3999
    70  0000                     _TXSTAbits	set	4012
    71  0000                     _BAUDCONbits	set	4024
    72  0000                     _RCSTAbits	set	4011
    73  0000                     _SPBRG	set	4015
    74  0000                     _SPBRGH	set	4016
    75  0000                     _TRISCbits	set	3988
    76                           
    77                           ; #config settings
    78  0000                     
    79                           	psect	cinit
    80  0001FA                     __pcinit:
    81                           	opt stack 0
    82  0001FA                     start_initialization:
    83                           	opt stack 0
    84  0001FA                     __initialization:
    85                           	opt stack 0
    86                           
    87                           ; Initialize objects allocated to COMRAM (1 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  0001FA  0E2E               	movlw	low __pidataCOMRAM
    90  0001FC  6EF6               	movwf	tblptrl,c
    91  0001FE  0E02               	movlw	high __pidataCOMRAM
    92  000200  6EF7               	movwf	tblptrh,c
    93  000202  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  000204  6EF8               	movwf	tblptru,c
    95  000206  0009               	tblrd		*+	;fetch initializer
    96  000208  CFF5 F02E          	movff	tablat,__pdataCOMRAM
    97                           
    98                           ; Clear objects allocated to COMRAM (1 bytes)
    99  00020C  6A2D               	clrf	__pbssCOMRAM& (0+255),c
   100  00020E                     end_of_initialization:
   101                           	opt stack 0
   102  00020E                     __end_of__initialization:
   103                           	opt stack 0
   104  00020E  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   105  000210  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   106  000212  0100               	movlb	0
   107  000214  EFA3  F000         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           tblptrl	equ	0xFF6
   111                           tablat	equ	0xFF5
   112                           
   113                           	psect	bssCOMRAM
   114  00002D                     __pbssCOMRAM:
   115                           	opt stack 0
   116  00002D                     _got_data_bool:
   117                           	opt stack 0
   118  00002D                     	ds	1
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           
   124                           	psect	dataCOMRAM
   125  00002E                     __pdataCOMRAM:
   126                           	opt stack 0
   127  00002E                     _data:
   128                           	opt stack 0
   129  00002E                     	ds	1
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           
   135                           	psect	cstackCOMRAM
   136  000001                     __pcstackCOMRAM:
   137                           	opt stack 0
   138  000001                     uart_receiver@c:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x0
   142  000001                     	ds	2
   143  000003                     uart_receiver@rx_flag:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x2
   147  000003                     	ds	2
   148  000005                     uart_receiver@er:
   149                           	opt stack 0
   150                           
   151                           ; 1 bytes @ 0x4
   152  000005                     	ds	1
   153  000006                     ??_high_isr:
   154                           
   155                           ; 1 bytes @ 0x5
   156  000006                     	ds	14
   157  000014                     ??_low_isr:
   158                           
   159                           ; 1 bytes @ 0x13
   160  000014                     	ds	17
   161  000025                     uart_init@gen_reg:
   162                           	opt stack 0
   163  000025                     uart_send@c:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x24
   167  000025                     	ds	2
   168  000027                     uart_init@sync:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x26
   172  000027                     	ds	2
   173  000029                     uart_init@brgh:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x28
   177  000029                     	ds	2
   178  00002B                     uart_init@brg16:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x2A
   182  00002B                     	ds	2
   183  00002D                     tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           
   188                           ; 1 bytes @ 0x2C
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 58 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   208 ;;      Params:         0       0       0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0       0       0
   210 ;;      Temps:          0       0       0       0       0       0       0
   211 ;;      Totals:         0       0       0       0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels required when called:    4
   214 ;; This function calls:
   215 ;;		_uart_init
   216 ;;		_uart_send
   217 ;; This function is called by:
   218 ;;		Startup code after reset
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           	psect	text0
   223  000146                     __ptext0:
   224                           	opt stack 0
   225  000146                     _main:
   226                           	opt stack 27
   227                           
   228                           ;main.c: 60: OSCCONbits.IRCF = 0x07;
   229                           
   230                           ;incstack = 0
   231  000146  88D3               	bsf	4051,4,c	;volatile
   232  000148  8AD3               	bsf	4051,5,c	;volatile
   233  00014A  8CD3               	bsf	4051,6,c	;volatile
   234                           
   235                           ;main.c: 61: OSCCONbits.SCS = 0x03;
   236  00014C  0E03               	movlw	3
   237  00014E  12D3               	iorwf	4051,f,c	;volatile
   238  000150                     l53:
   239  000150  A4D3               	btfss	4051,2,c	;volatile
   240  000152  D7FE               	goto	l53
   241                           
   242                           ;main.c: 64: uart_init(51,0,1,0);
   243  000154  0E00               	movlw	0
   244  000156  6E26               	movwf	uart_init@gen_reg+1,c
   245  000158  0E33               	movlw	51
   246  00015A  6E25               	movwf	uart_init@gen_reg,c
   247  00015C  0E00               	movlw	0
   248  00015E  6E28               	movwf	uart_init@sync+1,c
   249  000160  0E00               	movlw	0
   250  000162  6E27               	movwf	uart_init@sync,c
   251  000164  0E00               	movlw	0
   252  000166  6E2A               	movwf	uart_init@brgh+1,c
   253  000168  0E01               	movlw	1
   254  00016A  6E29               	movwf	uart_init@brgh,c
   255  00016C  0E00               	movlw	0
   256  00016E  6E2C               	movwf	uart_init@brg16+1,c
   257  000170  0E00               	movlw	0
   258  000172  6E2B               	movwf	uart_init@brg16,c
   259  000174  ECCB  F000         	call	_uart_init	;wreg free
   260                           
   261                           ;main.c: 66: RCONbits.IPEN = 1;
   262  000178  8ED0               	bsf	4048,7,c	;volatile
   263                           
   264                           ;main.c: 67: INTCONbits.GIEH = 1;
   265  00017A  8EF2               	bsf	intcon,7,c	;volatile
   266                           
   267                           ;main.c: 68: INTCONbits.GIEL = 1;
   268  00017C  8CF2               	bsf	intcon,6,c	;volatile
   269  00017E                     l792:
   270                           
   271                           ;main.c: 75: if(got_data_bool){
   272  00017E  502D               	movf	_got_data_bool,w,c
   273  000180  B4D8               	btfsc	status,2,c
   274  000182  D7FD               	goto	l792
   275                           
   276                           ;main.c: 76: uart_send(&data);
   277  000184  0E2E               	movlw	low _data
   278  000186  6E25               	movwf	uart_send@c,c
   279  000188  0E00               	movlw	high _data
   280  00018A  6E26               	movwf	uart_send@c+1,c
   281  00018C  EC0C  F001         	call	_uart_send	;wreg free
   282                           
   283                           ;main.c: 77: got_data_bool = 0;
   284  000190  0E00               	movlw	0
   285  000192  6E2D               	movwf	_got_data_bool,c
   286  000194  D7F4               	goto	l792
   287  000196                     __end_of_main:
   288                           	opt stack 0
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           intcon	equ	0xFF2
   294                           status	equ	0xFD8
   295                           
   296 ;; *************** function _uart_send *****************
   297 ;; Defined at:
   298 ;;		line 37 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;  c               2   36[COMRAM] PTR unsigned char 
   301 ;;		 -> data(1), 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr2l, fsr2h, status,2
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   313 ;;      Params:         2       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; Hardware stack levels required when called:    3
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328  000218                     __ptext1:
   329                           	opt stack 0
   330  000218                     _uart_send:
   331                           	opt stack 27
   332                           
   333                           ;main.c: 38: TXREG=*c;
   334                           
   335                           ;incstack = 0
   336  000218  C025  FFD9         	movff	uart_send@c,fsr2l
   337  00021C  C026  FFDA         	movff	uart_send@c+1,fsr2h
   338  000220  50DF               	movf	indf2,w,c
   339  000222  6EAD               	movwf	4013,c	;volatile
   340                           
   341                           ;main.c: 39: while(TXSTAbits.TRMT==0){
   342  000224  D001               	goto	l40
   343  000226                     l41:
   344                           
   345                           ;main.c: 40: __nop();
   346  000226  F000               	nop	
   347  000228                     l40:
   348  000228  B2AC               	btfsc	4012,1,c	;volatile
   349  00022A  0012               	return	
   350  00022C  D7FC               	goto	l41
   351  00022E                     __end_of_uart_send:
   352                           	opt stack 0
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           intcon	equ	0xFF2
   358                           indf2	equ	0xFDF
   359                           fsr2h	equ	0xFDA
   360                           fsr2l	equ	0xFD9
   361                           status	equ	0xFD8
   362                           
   363 ;; *************** function _uart_init *****************
   364 ;; Defined at:
   365 ;;		line 14 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;  gen_reg         2   36[COMRAM] unsigned int 
   368 ;;  sync            2   38[COMRAM] unsigned int 
   369 ;;  brgh            2   40[COMRAM] unsigned int 
   370 ;;  brg16           2   42[COMRAM] unsigned int 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         8       0       0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0
   385 ;;      Totals:         8       0       0       0       0       0       0
   386 ;;Total ram usage:        8 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text2
   397  000196                     __ptext2:
   398                           	opt stack 0
   399  000196                     _uart_init:
   400                           	opt stack 27
   401                           
   402                           ;main.c: 16: TRISCbits.RC7=1;
   403                           
   404                           ;incstack = 0
   405  000196  8E94               	bsf	3988,7,c	;volatile
   406                           
   407                           ;main.c: 17: TRISCbits.RC6=1;
   408  000198  8C94               	bsf	3988,6,c	;volatile
   409                           
   410                           ;main.c: 19: SPBRGH = (gen_reg & 0xFF00) >> 8;
   411  00019A  5026               	movf	uart_init@gen_reg+1,w,c
   412  00019C  6EB0               	movwf	4016,c	;volatile
   413                           
   414                           ;main.c: 20: SPBRG = gen_reg & 0x00FF;
   415  00019E  C025  FFAF         	movff	uart_init@gen_reg,4015	;volatile
   416                           
   417                           ;main.c: 22: RCSTAbits.CREN = 1;
   418  0001A2  88AB               	bsf	4011,4,c	;volatile
   419                           
   420                           ;main.c: 23: RCSTAbits.SPEN = 1;
   421  0001A4  8EAB               	bsf	4011,7,c	;volatile
   422                           
   423                           ;main.c: 24: BAUDCONbits.BRG16 = brg16;
   424  0001A6  B02B               	btfsc	uart_init@brg16,0,c
   425  0001A8  D002               	bra	u115
   426  0001AA  96B8               	bcf	4024,3,c	;volatile
   427  0001AC  D001               	bra	u116
   428  0001AE                     u115:
   429  0001AE  86B8               	bsf	4024,3,c	;volatile
   430  0001B0                     u116:
   431                           
   432                           ;main.c: 26: TXSTAbits.SYNC = sync;
   433  0001B0  B027               	btfsc	uart_init@sync,0,c
   434  0001B2  D002               	bra	u125
   435  0001B4  98AC               	bcf	4012,4,c	;volatile
   436  0001B6  D001               	bra	u126
   437  0001B8                     u125:
   438  0001B8  88AC               	bsf	4012,4,c	;volatile
   439  0001BA                     u126:
   440                           
   441                           ;main.c: 27: TXSTAbits.BRGH = brgh;
   442  0001BA  B029               	btfsc	uart_init@brgh,0,c
   443  0001BC  D002               	bra	u135
   444  0001BE  94AC               	bcf	4012,2,c	;volatile
   445  0001C0  D001               	bra	u136
   446  0001C2                     u135:
   447  0001C2  84AC               	bsf	4012,2,c	;volatile
   448  0001C4                     u136:
   449                           
   450                           ;main.c: 28: TXSTAbits.TXEN = 1;
   451  0001C4  8AAC               	bsf	4012,5,c	;volatile
   452                           
   453                           ;main.c: 30: IPR1bits.RCIP=1;
   454  0001C6  8A9F               	bsf	3999,5,c	;volatile
   455                           
   456                           ;main.c: 31: PIE1bits.RCIE=1;
   457  0001C8  8A9D               	bsf	3997,5,c	;volatile
   458  0001CA  0012               	return		;funcret
   459  0001CC                     __end_of_uart_init:
   460                           	opt stack 0
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           intcon	equ	0xFF2
   466                           indf2	equ	0xFDF
   467                           fsr2h	equ	0xFDA
   468                           fsr2l	equ	0xFD9
   469                           status	equ	0xFD8
   470                           
   471 ;; *************** function _low_isr *****************
   472 ;; Defined at:
   473 ;;		line 93 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		None
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   487 ;;      Params:         0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0
   489 ;;      Temps:         17       0       0       0       0       0       0
   490 ;;      Totals:        17       0       0       0       0       0       0
   491 ;;Total ram usage:       17 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    2
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		Interrupt level 1
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	intcodelo
   502  000018                     __pintcodelo:
   503                           	opt stack 0
   504  000018                     _low_isr:
   505                           	opt stack 27
   506                           
   507                           ;incstack = 0
   508  000018  802F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   509  00001A  CFD8 F014          	movff	status,??_low_isr
   510  00001E  CFE8 F015          	movff	wreg,??_low_isr+1
   511  000022  CFE0 F016          	movff	bsr,??_low_isr+2
   512  000026  CFFA F017          	movff	pclath,??_low_isr+3
   513  00002A  CFFB F018          	movff	pclatu,??_low_isr+4
   514  00002E  CFE9 F019          	movff	fsr0l,??_low_isr+5
   515  000032  CFEA F01A          	movff	fsr0h,??_low_isr+6
   516  000036  CFE1 F01B          	movff	fsr1l,??_low_isr+7
   517  00003A  CFE2 F01C          	movff	fsr1h,??_low_isr+8
   518  00003E  CFD9 F01D          	movff	fsr2l,??_low_isr+9
   519  000042  CFDA F01E          	movff	fsr2h,??_low_isr+10
   520  000046  CFF3 F01F          	movff	prodl,??_low_isr+11
   521  00004A  CFF4 F020          	movff	prodh,??_low_isr+12
   522  00004E  CFF6 F021          	movff	tblptrl,??_low_isr+13
   523  000052  CFF7 F022          	movff	tblptrh,??_low_isr+14
   524  000056  CFF8 F023          	movff	tblptru,??_low_isr+15
   525  00005A  CFF5 F024          	movff	tablat,??_low_isr+16
   526                           
   527                           ;main.c: 94: INTCONbits.GIEH = 0;
   528  00005E  9EF2               	bcf	intcon,7,c	;volatile
   529                           
   530                           ;main.c: 95: if(PIR1bits.TXIF){
   531  000060  B89E               	btfsc	3998,4,c	;volatile
   532                           
   533                           ;main.c: 96: PIR1bits.TXIF=0;
   534  000062  989E               	bcf	3998,4,c	;volatile
   535                           
   536                           ;main.c: 97: }
   537                           ;main.c: 98: INTCONbits.GIEH = 1;
   538  000064  8EF2               	bsf	intcon,7,c	;volatile
   539  000066  C024  FFF5         	movff	??_low_isr+16,tablat
   540  00006A  C023  FFF8         	movff	??_low_isr+15,tblptru
   541  00006E  C022  FFF7         	movff	??_low_isr+14,tblptrh
   542  000072  C021  FFF6         	movff	??_low_isr+13,tblptrl
   543  000076  C020  FFF4         	movff	??_low_isr+12,prodh
   544  00007A  C01F  FFF3         	movff	??_low_isr+11,prodl
   545  00007E  C01E  FFDA         	movff	??_low_isr+10,fsr2h
   546  000082  C01D  FFD9         	movff	??_low_isr+9,fsr2l
   547  000086  C01C  FFE2         	movff	??_low_isr+8,fsr1h
   548  00008A  C01B  FFE1         	movff	??_low_isr+7,fsr1l
   549  00008E  C01A  FFEA         	movff	??_low_isr+6,fsr0h
   550  000092  C019  FFE9         	movff	??_low_isr+5,fsr0l
   551  000096  C018  FFFB         	movff	??_low_isr+4,pclatu
   552  00009A  C017  FFFA         	movff	??_low_isr+3,pclath
   553  00009E  C016  FFE0         	movff	??_low_isr+2,bsr
   554  0000A2  C015  FFE8         	movff	??_low_isr+1,wreg
   555  0000A6  C014  FFD8         	movff	??_low_isr,status
   556  0000AA  902F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   557  0000AC  0010               	retfie	
   558  0000AE                     __end_of_low_isr:
   559                           	opt stack 0
   560                           pclatu	equ	0xFFB
   561                           pclath	equ	0xFFA
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           prodh	equ	0xFF4
   567                           prodl	equ	0xFF3
   568                           intcon	equ	0xFF2
   569                           fsr0h	equ	0xFEA
   570                           fsr0l	equ	0xFE9
   571                           wreg	equ	0xFE8
   572                           fsr1h	equ	0xFE2
   573                           fsr1l	equ	0xFE1
   574                           bsr	equ	0xFE0
   575                           indf2	equ	0xFDF
   576                           fsr2h	equ	0xFDA
   577                           fsr2l	equ	0xFD9
   578                           status	equ	0xFD8
   579                           
   580 ;; *************** function _high_isr *****************
   581 ;; Defined at:
   582 ;;		line 83 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   596 ;;      Params:         0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0
   598 ;;      Temps:         14       0       0       0       0       0       0
   599 ;;      Totals:        14       0       0       0       0       0       0
   600 ;;Total ram usage:       14 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    1
   603 ;; This function calls:
   604 ;;		_uart_receiver
   605 ;; This function is called by:
   606 ;;		Interrupt level 2
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	intcode
   611  000008                     __pintcode:
   612                           	opt stack 0
   613  000008                     _high_isr:
   614                           	opt stack 27
   615                           
   616                           ;incstack = 0
   617  000008  822F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   618  00000A  ED59  F000         	call	int_func,f	;refresh shadow registers
   619                           pclatu	equ	0xFFB
   620                           pclath	equ	0xFFA
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           prodh	equ	0xFF4
   626                           prodl	equ	0xFF3
   627                           intcon	equ	0xFF2
   628                           fsr0h	equ	0xFEA
   629                           fsr0l	equ	0xFE9
   630                           wreg	equ	0xFE8
   631                           fsr1h	equ	0xFE2
   632                           fsr1l	equ	0xFE1
   633                           bsr	equ	0xFE0
   634                           indf2	equ	0xFDF
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           
   639                           	psect	intcode_body
   640  0000B2                     __pintcode_body:
   641                           	opt stack 27
   642  0000B2                     int_func:
   643                           	opt stack 27
   644  0000B2  0006               	pop		; remove dummy address from shadow register refresh
   645  0000B4  CFFA F006          	movff	pclath,??_high_isr
   646  0000B8  CFFB F007          	movff	pclatu,??_high_isr+1
   647  0000BC  CFE9 F008          	movff	fsr0l,??_high_isr+2
   648  0000C0  CFEA F009          	movff	fsr0h,??_high_isr+3
   649  0000C4  CFE1 F00A          	movff	fsr1l,??_high_isr+4
   650  0000C8  CFE2 F00B          	movff	fsr1h,??_high_isr+5
   651  0000CC  CFD9 F00C          	movff	fsr2l,??_high_isr+6
   652  0000D0  CFDA F00D          	movff	fsr2h,??_high_isr+7
   653  0000D4  CFF3 F00E          	movff	prodl,??_high_isr+8
   654  0000D8  CFF4 F00F          	movff	prodh,??_high_isr+9
   655  0000DC  CFF6 F010          	movff	tblptrl,??_high_isr+10
   656  0000E0  CFF7 F011          	movff	tblptrh,??_high_isr+11
   657  0000E4  CFF8 F012          	movff	tblptru,??_high_isr+12
   658  0000E8  CFF5 F013          	movff	tablat,??_high_isr+13
   659                           
   660                           ;main.c: 84: INTCONbits.GIEH = 0;
   661  0000EC  9EF2               	bcf	intcon,7,c	;volatile
   662                           
   663                           ;main.c: 85: if(PIR1bits.RCIF){
   664  0000EE  AA9E               	btfss	3998,5,c	;volatile
   665  0000F0  D00B               	goto	i2l804
   666                           
   667                           ;main.c: 86: uart_receiver(&data,&got_data_bool);
   668  0000F2  0E2E               	movlw	low _data
   669  0000F4  6E01               	movwf	uart_receiver@c,c
   670  0000F6  0E00               	movlw	high _data
   671  0000F8  6E02               	movwf	uart_receiver@c+1,c
   672  0000FA  0E2D               	movlw	low _got_data_bool
   673  0000FC  6E03               	movwf	uart_receiver@rx_flag,c
   674  0000FE  0E00               	movlw	high _got_data_bool
   675  000100  6E04               	movwf	uart_receiver@rx_flag+1,c
   676  000102  ECE6  F000         	call	_uart_receiver	;wreg free
   677                           
   678                           ;main.c: 87: PIR1bits.RCIF=0;
   679  000106  9A9E               	bcf	3998,5,c	;volatile
   680  000108                     i2l804:
   681                           
   682                           ;main.c: 88: }
   683                           ;main.c: 90: INTCONbits.GIEH = 1;
   684  000108  8EF2               	bsf	intcon,7,c	;volatile
   685  00010A  C013  FFF5         	movff	??_high_isr+13,tablat
   686  00010E  C012  FFF8         	movff	??_high_isr+12,tblptru
   687  000112  C011  FFF7         	movff	??_high_isr+11,tblptrh
   688  000116  C010  FFF6         	movff	??_high_isr+10,tblptrl
   689  00011A  C00F  FFF4         	movff	??_high_isr+9,prodh
   690  00011E  C00E  FFF3         	movff	??_high_isr+8,prodl
   691  000122  C00D  FFDA         	movff	??_high_isr+7,fsr2h
   692  000126  C00C  FFD9         	movff	??_high_isr+6,fsr2l
   693  00012A  C00B  FFE2         	movff	??_high_isr+5,fsr1h
   694  00012E  C00A  FFE1         	movff	??_high_isr+4,fsr1l
   695  000132  C009  FFEA         	movff	??_high_isr+3,fsr0h
   696  000136  C008  FFE9         	movff	??_high_isr+2,fsr0l
   697  00013A  C007  FFFB         	movff	??_high_isr+1,pclatu
   698  00013E  C006  FFFA         	movff	??_high_isr,pclath
   699  000142  922F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   700  000144  0011               	retfie		f
   701  000146                     __end_of_high_isr:
   702                           	opt stack 0
   703                           pclatu	equ	0xFFB
   704                           pclath	equ	0xFFA
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           prodh	equ	0xFF4
   710                           prodl	equ	0xFF3
   711                           intcon	equ	0xFF2
   712                           fsr0h	equ	0xFEA
   713                           fsr0l	equ	0xFE9
   714                           wreg	equ	0xFE8
   715                           fsr1h	equ	0xFE2
   716                           fsr1l	equ	0xFE1
   717                           bsr	equ	0xFE0
   718                           indf2	equ	0xFDF
   719                           fsr2h	equ	0xFDA
   720                           fsr2l	equ	0xFD9
   721                           status	equ	0xFD8
   722                           
   723 ;; *************** function _uart_receiver *****************
   724 ;; Defined at:
   725 ;;		line 44 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  c               2    0[COMRAM] PTR unsigned char 
   728 ;;		 -> data(1), 
   729 ;;  rx_flag         2    2[COMRAM] PTR unsigned char 
   730 ;;		 -> got_data_bool(1), 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  er              1    4[COMRAM] unsigned char 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr2l, fsr2h
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   742 ;;      Params:         4       0       0       0       0       0       0
   743 ;;      Locals:         1       0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0
   745 ;;      Totals:         5       0       0       0       0       0       0
   746 ;;Total ram usage:        5 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_high_isr
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text5
   756  0001CC                     __ptext5:
   757                           	opt stack 0
   758  0001CC                     _uart_receiver:
   759                           	opt stack 27
   760                           
   761                           ;main.c: 46: if(RCSTAbits.FERR){
   762                           
   763                           ;incstack = 0
   764  0001CC  A4AB               	btfss	4011,2,c	;volatile
   765  0001CE  D003               	goto	i2l46
   766                           
   767                           ;main.c: 47: uint8_t er = RCREG;
   768  0001D0  CFAE F005          	movff	4014,uart_receiver@er	;volatile
   769                           
   770                           ;main.c: 48: }else if(RCSTAbits.OERR){
   771  0001D4  0012               	return	
   772  0001D6                     i2l46:
   773  0001D6  A2AB               	btfss	4011,1,c	;volatile
   774  0001D8  D003               	goto	i2l776
   775                           
   776                           ;main.c: 49: RCSTAbits.CREN=0;
   777  0001DA  98AB               	bcf	4011,4,c	;volatile
   778                           
   779                           ;main.c: 50: RCSTAbits.CREN=1;
   780  0001DC  88AB               	bsf	4011,4,c	;volatile
   781                           
   782                           ;main.c: 51: }else{
   783  0001DE  0012               	return	
   784  0001E0                     i2l776:
   785                           
   786                           ;main.c: 52: *c = RCREG;
   787  0001E0  C001  FFD9         	movff	uart_receiver@c,fsr2l
   788  0001E4  C002  FFDA         	movff	uart_receiver@c+1,fsr2h
   789  0001E8  CFAE FFDF          	movff	4014,indf2	;volatile
   790                           
   791                           ;main.c: 53: *rx_flag = 1;
   792  0001EC  C003  FFD9         	movff	uart_receiver@rx_flag,fsr2l
   793  0001F0  C004  FFDA         	movff	uart_receiver@rx_flag+1,fsr2h
   794  0001F4  0E01               	movlw	1
   795  0001F6  6EDF               	movwf	indf2,c
   796  0001F8  0012               	return	
   797  0001FA                     __end_of_uart_receiver:
   798                           	opt stack 0
   799  0000                     pclatu	equ	0xFFB
   800                           pclath	equ	0xFFA
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           prodh	equ	0xFF4
   806                           prodl	equ	0xFF3
   807                           intcon	equ	0xFF2
   808                           fsr0h	equ	0xFEA
   809                           fsr0l	equ	0xFE9
   810                           wreg	equ	0xFE8
   811                           fsr1h	equ	0xFE2
   812                           fsr1l	equ	0xFE1
   813                           bsr	equ	0xFE0
   814                           indf2	equ	0xFDF
   815                           fsr2h	equ	0xFDA
   816                           fsr2l	equ	0xFD9
   817                           status	equ	0xFD8
   818                           pclatu	equ	0xFFB
   819                           pclath	equ	0xFFA
   820                           tblptru	equ	0xFF8
   821                           tblptrh	equ	0xFF7
   822                           tblptrl	equ	0xFF6
   823                           tablat	equ	0xFF5
   824                           prodh	equ	0xFF4
   825                           prodl	equ	0xFF3
   826                           intcon	equ	0xFF2
   827                           fsr0h	equ	0xFEA
   828                           fsr0l	equ	0xFE9
   829                           wreg	equ	0xFE8
   830                           fsr1h	equ	0xFE2
   831                           fsr1l	equ	0xFE1
   832                           bsr	equ	0xFE0
   833                           indf2	equ	0xFDF
   834                           fsr2h	equ	0xFDA
   835                           fsr2l	equ	0xFD9
   836                           status	equ	0xFD8
   837                           
   838                           	psect	rparam
   839  0000                     pclatu	equ	0xFFB
   840                           pclath	equ	0xFFA
   841                           tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           prodh	equ	0xFF4
   846                           prodl	equ	0xFF3
   847                           intcon	equ	0xFF2
   848                           fsr0h	equ	0xFEA
   849                           fsr0l	equ	0xFE9
   850                           wreg	equ	0xFE8
   851                           fsr1h	equ	0xFE2
   852                           fsr1l	equ	0xFE1
   853                           bsr	equ	0xFE0
   854                           indf2	equ	0xFDF
   855                           fsr2h	equ	0xFDA
   856                           fsr2l	equ	0xFD9
   857                           status	equ	0xFD8
   858                           
   859                           	psect	temp
   860  00002F                     btemp:
   861                           	opt stack 0
   862  00002F                     	ds	1
   863  0000                     int$flags	set	btemp
   864                           pclatu	equ	0xFFB
   865                           pclath	equ	0xFFA
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           prodh	equ	0xFF4
   871                           prodl	equ	0xFF3
   872                           intcon	equ	0xFF2
   873                           fsr0h	equ	0xFEA
   874                           fsr0l	equ	0xFE9
   875                           wreg	equ	0xFE8
   876                           fsr1h	equ	0xFE2
   877                           fsr1l	equ	0xFE1
   878                           bsr	equ	0xFE0
   879                           indf2	equ	0xFDF
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     44      46
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    uart_receiver@rx_flag	PTR unsigned char  size(2) Largest target is 1
		 -> got_data_bool(COMRAM[1]), 

    uart_receiver@c	PTR unsigned char  size(2) Largest target is 1
		 -> data(COMRAM[1]), 

    uart_send@c	PTR unsigned char  size(2) Largest target is 1
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_uart_init

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_uart_receiver

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     452
                          _uart_init
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            2     0      2      86
                                             36 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            8     0      8     366
                                             36 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0       0
                                             19 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            14    14      0     173
                                              5 COMRAM    14    14      0
                      _uart_receiver
 ---------------------------------------------------------------------------------
 (4) _uart_receiver                                        5     1      4     173
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init
   _uart_send

 _low_isr (ROOT)

 _high_isr (ROOT)
   _uart_receiver

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2C      2E       1       36.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      15        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Oct 07 02:40:38 2018

                     l40 0228                       l41 0226                       l53 0150  
                     bsr 000FE0              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l792 017E             __CFG_CPB$OFF 000000  
                    u115 01AE                      u116 01B0                      u125 01B8  
                    u126 01BA                      u135 01C2                      u136 01C4  
           __CFG_CPD$OFF 000000          ??_uart_receiver 0005                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     i2l46 01D6                     _data 002E  
                   _main 0146                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 002F  
                   prodh 000FF4                     prodl 000FF3                     start 00AE  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    i2l804 0108                    i2l776 01E0  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _TXREG 000FAD  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_low_isr 00AE  
         __CFG_BOREN$OFF 000000                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 01FA             __end_of_main 0196  
                 ??_main 002D            __activetblptr 000000                   _SPBRGH 000FB0  
         __CFG_XINST$OFF 000000         __end_of_high_isr 0146           __CFG_STVREN$ON 000000  
          _got_data_bool 002D             __pdataCOMRAM 002E                ??_low_isr 0014  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 020E          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_uart_init 0036  
     __size_of_uart_send 0016    __end_of_uart_receiver 01FA                ?_high_isr 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 01FA  
                __ramtop 0600                  __ptext0 0146                  __ptext1 0218  
                __ptext2 0196                  __ptext5 01CC                  _low_isr 0018  
             ??_high_isr 0006           __pintcode_body 00B2     end_of_initialization 020E  
                int_func 00B2        __end_of_uart_init 01CC        __end_of_uart_send 022E  
       uart_init@gen_reg 0025                _RCSTAbits 000FAB                _TRISCbits 000F94  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8            __pidataCOMRAM 022E  
    start_initialization 01FA         __CFG_OSC$INTIO67 000000         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 002D     uart_receiver@rx_flag 0003        __size_of_high_isr 013E  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008              __pintcodelo 0018  
               ?_low_isr 0001                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
              _uart_init 0196                _uart_send 0218   __size_of_uart_receiver 002E  
             uart_send@c 0025                 __Hrparam 0000                 __Lrparam 0000  
        uart_receiver@er 0005               ?_uart_init 0025               ?_uart_send 0025  
       __size_of_low_isr 0096            _uart_receiver 01CC                 _high_isr 0008  
          __size_of_main 0050           uart_init@brg16 002B                 int$flags 002F  
             _INTCONbits 000FF2           uart_receiver@c 0001           ?_uart_receiver 0001  
               intlevel1 0000                 intlevel2 0000               _OSCCONbits 000FD3  
          uart_init@brgh 0029            uart_init@sync 0027              ??_uart_init 002D  
            ??_uart_send 0027  
